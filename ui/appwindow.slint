import { Button, VerticalBox, GridBox, CheckBox, ComboBox, Switch, Spinner, LineEdit, ListView, AboutSlint, ProgressIndicator, SpinBox, HorizontalBox, StandardListView, TabWidget, GroupBox, StandardButton, TextEdit } from "std-widgets.slint";

export global varfn {
    in-out property <string> usericon;
    in-out property <string> username;
    in-out property <string> olnstatus;

    in-out property < [[string]]> rooms;
    in-out property < [[string]]> messages;

    // in-out property <int> isandroid : 0; 
    pure callback isandroid() -> int;

}

component Splitter inherits TouchArea {
    width: 4px;
    mouse-cursor: ew-resize;

    padding: 0px;
    Rectangle {
        padding: 0px;
        width: 100%;
        height: 100%;
        background: blue;
    }
}
component HSpacer inherits Rectangle {
    max-height: 1px;
    // width: 100%;
    // horizontal-stretch: 1;
}
component VSpacer inherits Rectangle {
    max-width: 1px;
    // vertical-stretch: 1;
}


component UserInfoui inherits  Rectangle {
    padding: 0px;
    HorizontalLayout {
        padding: 0px;
        Image {
            max-width: 22px;
            max-height: 22px;
            min-width: 22px;
            vertical-alignment: top;
            // source: @image-url("/home/mememe/Downloads/favicon.png");
            // source: @image-url("");
            source: @image-url("../images/border-diamonds.png");
            // image-fit: fill;
        }
        VerticalLayout {
            // padding: 0px;
            Text {text: "hhhh444";
                // padding: 0;
                vertical-alignment: center;
            }
            Text {text: "hhhh555";
                font-size: 10px; opacity: 0.5;
                // padding: 0;
                // max-height: 19px;
                vertical-alignment: top;
            }
        }
        // HorizontalBox {
            // padding: 0px;
            // Text {text: "hhhh111";}
            TextInput {text: "......"; wrap: word-wrap;}
            Button {text: ">>";}
            Button {text: "+";}
            // StandardButton {}
            // Text {text: "hhhh333";}
        // }
    }
}

component RoomItemui inherits TouchArea {
    padding: 0px;
    
    HorizontalLayout {
        padding: 0px;
        Text {
            text: "!\n!"; 
            max-width: 2px;
        }
        Image {
            padding: 0px;
            // colorize: #3016d6;
            max-height: 22px;
            max-width: 22px;
            min-width: 22px;
            vertical-alignment: top;

            // error: Cannot find image file https:
            // source: @image-url("https://interactive-examples.mdn.mozilla.net/media/examples/border-diamonds.png");
            // 添加这个属性，直接文件大小+10M???
            // source: @image-url("/home/mememe/Downloads/border-diamonds.png");
            // source: @image-url("");
            source: @image-url("../images/favicon.png");
        }
        VerticalLayout {
            padding: 0px;
           
            // Text {text: "|\n|\n|";}
            // LineEdit {
            //     // max-height: 16px;
            //     visible: false;
            // }
            HorizontalLayout {
                padding: 0px;
                Text {text: "hhhh111";}
                Text {text: "hhhh222";}
                Text {text: "hhhh333";}
            }
            Text {text: "hhhh444";}
            Text {text: "hhhh555";}
        }
        Text {
            text: "!\n!"; 
            max-width: 2px;
        }
    }
}

component RoomListBottomui inherits Rectangle {
    padding: 0px;

    HorizontalLayout {
        padding: 0px;

        Button {text: "fff111";}
        Button {text: "fff222";}
        Button {text: "fff333";}
        Button {text: "fff444";}
        // Button {text: "fff555";}
    }
}

component MessageListHeadui inherits Rectangle {
    in-out property <int> msgcnt;

    padding: 0px;
    HorizontalLayout {
        padding: 0px;

        Button {
            text: "btn111";
        }
        Text {text: "ttt呵呵222";}
        Text {text: "ttt呵呵ccc"+msgcnt;}
        Button {
            text: "btn222";
        }
        // Button {
        //     text: "btn333";
        // }
    }
}

component MessageListItemui inherits Rectangle {
    in-out property <string> msgtm;
    in-out property <string> msgchan;
    in-out property <string> msguser;
    in-out property <string> msgtext;

    // background: #743734;
    padding: 0px;
    HorizontalLayout {
        padding: 0px;

        Text {
            text: "!\n!"; 
            max-width: 3px;
        }
        Image {
            max-width: 22px;
            max-height: 22px;
            min-width: 22px;
            vertical-alignment: top;
            // source: @image-url("/home/mememe/Downloads/favicon.png");
            // source: @image-url("");
            source: @image-url("../images/border-diamonds.png");
            // image-fit: fill;
        }
        VerticalLayout {
            HorizontalLayout {
                Text {text: "ttt呵呵222";
                // horizontal-alignment: left;
                }
                Text {text: "ttt呵呵333";
                    // horizontal-alignment: left;
                }
                Text {text: msgchan;
                    // horizontal-alignment: left;
                }
            }

            // 这个TextInput占更小
            // TextInput {}
            // LineEdit {}
            Text {
                wrap: word-wrap;

                text: "ddttt呵呵111ddttt呵呵111 ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt 呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt 呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111ddttt呵呵111";
                

                // horizontal-alignment: left;
            }

            Text {text: "tttvxt呵呵555";
                // horizontal-alignment: left;
            }
        }


        Image {
            max-width: 22px;
            min-width: 22px;
            vertical-alignment: top;
            source: @image-url("../images/favicon.png");
        }
        Text {
            text: "!\n!"; 
            max-width: 2px;
        }
    }
}

component MessageListTailui inherits Rectangle {
    in-out property<string> iptval: "nam要m";
    in-out property <string> selfile;

    padding: 0px;
    HorizontalBox {
        padding: 0px;
        Image {
            max-width: 22px;
            max-height: 22px;
        }
        Image {
            
            max-width: 22px;
            max-height: 22px;
            min-width: 22px;
            // vertical-alignment: top;
            source: @image-url("../images/favicon.png");
        }
        Image {
            
            max-width: 22px;
            max-height: 22px;
            min-width: 22px;
            // vertical-alignment: top;
            source: @image-url("../images/favicon.png");
        }
        // LineEdit {
        //     text: iptval;
        // }
        TextEdit {
            padding: 0px;
            // viewport-x: 0px;
            wrap: word-wrap;
            min-height: 50px;
        
            text: "ffff 欧文 烩 owef \n烟消云散汉为";

        }
        Button {
            text: "btn111";
        }
        Image {
            max-width: 22px;
            max-height: 22px;
            min-width: 22px;
            source: @image-url("../images/favicon.png");
        }
    }
}

component RoomListAndUserInfoui inherits Rectangle {
    in property <[[string]]> rooms;
    rooms: [["ffff"],["gggggg"], ["hhhhhhh"], ["iiiiiii"], ["jjjjjjjj"], ["kkkkkkkk"], ["lllllllll"],["mmmmmmmm"],["nnnnnnnnnn"]];


    padding: 0px;
        VerticalLayout {
            padding: 0px;

            // LineEdit {}

            UserInfoui {}

            ListView {
                padding: 0px;
                for v in root.rooms : 
                     RoomItemui {}
            }

            RoomListBottomui {}
            TextInput {text: "deeemoooo";}
        }
}

component mytabwidget inherits TabWidget {
    
}

component stackwidget inherits Rectangle {
    in-out property <int> curridx : 0;
    

    gb1 := GroupBox {
            visible: true;
            Text {text: "ingrpbox";}
        }

    le1 := LineEdit {placeholder-text: "hehehhe";}

    function setcurridx2(idx : int) {
        if idx == 0 {
            gb1.visible = true;
            le1.visible = false;
        }else if idx==1{
            gb1.visible = false;
            le1.visible = true;
        }
    }

    states [
        child0 when curridx==0:{
            
        }
    ]

    // states [
    //     child0 when curridx==0 : {
    //         gb1.visible: true;
    //         le1.visible: false;
    //     }
    //     child1 when curridx==1 : {
    //         gb1.visible: false;
    //         le1.visible: true;
    //     }
    // ]
}

// macos cupertino, android material, other fluent
// cosmic 还可以，看看不能用在android上。
// slint的 material 是设计的最差的。
// material的 padding 很大，需要调整为0px

export component AppWindow inherits Window {
    in-out property <string> usericon;
    in-out property <string> username;
    in-out property <string> olnstatus;

    in property <[[string]]> rooms;
    in property <[string]> columns;
    in property <[[string]]> messages;

    callback justrunafunc();

    messages: [["ffff"],["gggggg"], ["hhhhhhh"], ["iiiiiii"], ["jjjjjjjj"], ["kkkkkkkk"], ["lllllllll"],["mmmmmmmm"],["nnnnnnnnnn"],["gggggg"], ["hhhhhhh"], ["iiiiiii"], ["jjjjjjjj"], ["kkkkkkkk"], ["lllllllll"],["mmmmmmmm"],["nnnnnnnnnn"],["gggggg"], ["hhhhhhh"], ["iiiiiii"], ["jjjjjjjj"], ["kkkkkkkk"], ["lllllllll"],["mmmmmmmm"],["nnnnnnnnnn"],["gggggg"], ["hhhhhhh"], ["iiiiiii"], ["jjjjjjjj"], ["kkkkkkkk"], ["lllllllll"],["mmmmmmmm"],["nnnnnnnnnn"]];

    padding: 0px;
    VerticalLayout {
        toolbar := HorizontalLayout{
            Button {text: "jjj";}
            Button {text: "jjj";}
            HSpacer {}
            Button {text: "jjj";}
            Button {text: "jjj";}
            Button {text: "jjj";}
        }
    
    lo1 := HorizontalLayout {
        padding: 1px;

        if varfn.isandroid() != 1:  HorizontalLayout {
            rlstui := RoomListAndUserInfoui{
            }
        // if varfn.isandroid() != 1:  
           splt1 := Splitter {
            // x: parent.width - self.width;
            // height: 100%;

            // seems slow
            moved => {
                // self.x = min(parent.width - self.width, max(400px, self.x + self.mouse-x - self.pressed-x));
                self.x = min(lo1.width - self.width, max(100px, self.x + self.mouse-x - self.pressed-x));
                tw.x = self.x;
                tw.width = lo1.width - self.x;
                rlstui.width = self.x;
                // tw.width = tw.width - self.mouse-x;
                // self.x = 286px+self.mouse-x;
            }
        }
    }
        

        tw := TabWidget {
            padding: 1px;
            // y: root.y - 50px;

            // Tab {stackwidget{}}

            tb0 := Tab {
                padding: 1px;
                title: "000";

                VerticalLayout {
                    padding: 1px;
                // LineEdit {}
                // LineEdit {}
                    // if varfn.isandroid() == 1:  RoomListAndUserInfoui{}
                    RoomListAndUserInfoui{}
                }
            }
            Tab {
                title: "111";
                // message list 主窗口
                VerticalLayout {
                    padding: 0px;
                    MessageListHeadui {
                        msgcnt: messages.length;
                    }
                    ListView {
                        padding: 0px;
                        for v in root.messages : 
                        MessageListItemui {
                            msgchan:  v[0];
                        }
                        
                    }
                    MessageListTailui {}
                }
            }
            Tab {
                title: "222";
                Button {text: "sssss";}
            }
            // Tab {
            //     title: "333";
            //     Button {text: "sssss";}
            // }
            
        }
        
    }

    stsbar := HorizontalLayout{
        Button {text: "jjj";}
        Button {text: "jjj";}
        Button {text: "jjj";}
        HSpacer {}
        Button {text: "jjj";}
        Button {text: "jjj";}
    }
    }

    states [
        onosandroid when varfn.isandroid() == 1 : {
            tw.current-index: 0;
        }
        onpc when varfn.isandroid() != 1 : {
            tw.current-index: 1;
        }
    ]

    init => {
        debug("AppWindow inited,"+varfn.isandroid());
        // if varfn.isandroid() != 1 {
        //     tw.current-index = 1;
        // //     tb0.opacity = 1;
        // //     tb0.visible = false;
        // }else{
        //     tw.current-index = 0;
        // }
    }
}

